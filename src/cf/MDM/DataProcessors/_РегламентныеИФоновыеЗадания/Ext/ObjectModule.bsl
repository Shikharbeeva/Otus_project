
Перем Версия Экспорт;
Перем Наименование Экспорт;

/////////////////////////////////////////////////////////////////////////////
// ОПИСАНИЕ ИНТЕРФЕЙСОВ

// Интерфейс для регистрации обработки.
// Вызывается при добавлении обработки в справочник "ВнешниеОбработки"
//
// Возвращаемое значение:
// Структура:
// Вид - строка - возможные значения:	"ДополнительнаяОбработка"
//										"ДополнительныйОтчет"
//										"ЗаполнениеОбъекта"
//										"Отчет"
//										"ПечатнаяФорма"
//										"СозданиеСвязанныхОбъектов"
//
// Назначение - массив строк имен объектов метаданных в формате:
//			<ИмяКлассаОбъектаМетаданного>.[ * | <ИмяОбъектаМетаданных>]
//			Например, "Документ.СчетЗаказ" или "Справочник.*"
//			Прим. параметр имеет смысл только для назначаемых обработок
//
// Наименование - строка - наименование обработки, которым будет заполнено
//						наименование справочника по умолчанию - краткая строка для
//						идентификации обработки администратором
//
// Версия - строка - версия обработки в формате <старший номер>.<младший номер>
//					используется при загрузке обработок в информационную базу
// БезопасныйРежим – Булево – Если истина, обработка будет запущена в безопасном режиме.
//							Более подбробная информация в справке.
//
// Информация - Строка- краткая информация по обработке, описание обработки
//
// Команды - ТаблицаЗначений - команды, поставляемые обработкой, одная строка таблицы соотвествует
//							одной команде
//				колонки: 
//				 - Представление - строка - представление команды конечному пользователю
//				 - Идентификатор - строка - идентефикатор команды. В случае печатных форм
//											перечисление через запятую списка макетов
//				 - Использование - строка - варианты запуска обработки:
//						"ОткрытиеФормы" - открыть форму обработки
//						"ВызовКлиентскогоМетода" - вызов клиентского экспортного метода из формы обработки
//						"ВызовСерверногоМетода" - вызов серверного экспортного метода из модуля объекта обработки
//				 - ПоказыватьОповещение – Булево – если Истина, требуется оказывать оповещение при начале
//								и при окончании запуска обработки. Прим. Имеет смысл только
//								при запуске обработки без открытия формы.
//				 - Модификатор – строка - для печатных форм MXL, которые требуется
//										отображать в форме ПечатьДокументов подсистемы Печать
//										требуется установить как "ПечатьMXL"
//
Функция СведенияОВнешнейОбработке() Экспорт
	
	ПараметрыРегистрации = ШаблонСведенияОВнешнейОбработке("2.1.9.2");
	
	ПараметрыРегистрации.Вставить("Вид"				, "ДополнительнаяОбработка");
	ПараметрыРегистрации.Вставить("Версия"			, Версия);
	ПараметрыРегистрации.Вставить("Наименование"	, Наименование);
	ПараметрыРегистрации.Вставить("БезопасныйРежим"	, Ложь);
	ПараметрыРегистрации.Вставить("Информация"		, НСтр("ru = 'Обработка позволяет управлять регламентными и фоновыми заданиями. Версия от 2016-11-15.'"));
	
	Команда = ПараметрыРегистрации.Команды.Добавить();
	Команда.Представление			= НСтр("ru = 'Регламентные и фоновые задания'");
	Команда.Идентификатор			= "бук_РегламентныеИФоновыеЗадания";
	Команда.Использование			= "ОткрытиеФормы";
	Команда.ПоказыватьОповещение	= Истина;
	
	Возврат ПараметрыРегистрации;
	
КонецФункции


/////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Формирует шаблон сведений о внешнем отчете или обработке для последующего заполнения.
//
// Параметры:
//   ВерсияБСП - Строка - Версия библиотеки стандартных подсистем, на которую рассчитывают механизмы внешнего объекта.
//       См. также СтандартныеПодсистемыСервер.ВерсияБиблиотеки().
//
// Возвращаемое значение:
//   ПараметрыРегистрации - Структура - Параметры внешнего объекта.
//       
//       * Вид - Строка - Вид внешнего объекта.
//           Для определения вида рекомендуется использовать функции
//           ДополнительныеОтчетыИОбработкиКлиентСервер.ВидОбработки<ИмяВида>.
//           Также Вид можно указать явно:
//           ** "ПечатнаяФорма"
//           ** "ЗаполнениеОбъекта"
//           ** "СозданиеСвязанныхОбъектов"
//           ** "Отчет"
//           ** "ДополнительнаяОбработка"
//           ** "ДополнительныйОтчет".
//       
//       * Версия - Строка - Версия объекта.
//           Задается в формате: "<Старший номер>.<Младший номер>".
//       
//       * Назначение - Массив - Необязательный.
//           Объекты конфигурации, для которых предназначен этот объект.
//           ** Строка - Полное имя объекта метаданных.
//       
//       * Наименование - Строка - Необязательный. Представление для администратора (наименование элемента справочника).
//           Если не заполнено, то берется представление объекта метаданных внешнего объекта.
//       
//       * БезопасныйРежим - Булево - Необязательный. Признак подключения внешней обработки в безопасном режиме.
//           Значение по умолчанию Истина (обработка будет выполняться безопасно).
//           В безопасном режиме:
//             Игнорируется привилегированный режим.
//             Запрещены внешние по отношению к платформе 1С:Предприятия действия:
//               COM;
//               Загрузка внешних компонентов;
//               Запуск внешних приложений и команд операционной системы;
//               Доступ к файловой системе, кроме временных файлов;
//               Доступ к Интернету.
//       
//       * Разрешения - Массив - Необязательный.
//           Дополнительные разрешения, необходимые внешней обработке при работе в безопасном режиме.
//           ** ОбъектXDTO {http://www.1c.ru/1cFresh/ApplicationExtensions/Permissions/a.b.c.d}PermissionBase - Разрешение.
//               Для формирования описания разрешения рекомендуется использовать функции
//               РаботаВБезопасномРежиме.Разрешение<ВидРазрешения>(<ПараметрыРазрешения>).
//       
//       * Информация - Строка - Необязательный. Краткая информация по внешнему объекту.
//           В этом параметре для администратора рекомендуется указать описание возможностей внешнего объекта.
//           Если не заполнено, то берется комментарий объекта метаданных внешнего объекта.
//       
//       * ВерсияБСП - Строка - Необязательный. Версия библиотеки, на которую рассчитывают механизмы внешнего объекта.
//           Подробнее - см. СтандартныеПодсистемыСервер.ВерсияБиблиотеки().
//       
//       * ОпределитьНастройкиФормы - Булево - Необязательный.
//           Флажок тесной интеграции дополнительного отчета с общей формой отчета.
//           Позволяет переопределять некоторые настройки формы и подписываться на ее события.
//           Если Истина, тогда в модуле объекта отчета следует определить процедуру по шаблону:
//           
//           // Настройки общей формы отчета подсистемы "Варианты отчетов".
//           //
//           // Параметры:
//           //   Форма - УправляемаяФорма, Неопределено - Форма отчета или форма настроек отчета.
//           //       Неопределено когда вызов без контекста.
//           //   КлючВарианта - Строка, Неопределено - Имя предопределенного
//           //       или уникальный идентификатор пользовательского варианта отчета.
//           //       Неопределено когда вызов без контекста.
//           //   Настройки - Структура - см. возвращаемое значение
//           //       ОтчетыКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию().
//           //
//           Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
//           	// Код процедуры.
//           КонецПроцедуры
//           
//           Внимание. Этот флажок работает только для дополнительных отчетов, подключенных к общей форме ФормаОтчета.
//           Подробнее см. в документации к подсистемам "Дополнительные отчеты и обработки" и "Варианты отчетов".
//       
//       * Команды - ТаблицаЗначений - Необязательный для отчетов. Настройки команд, поставляемых внешним объектом.
//           
//           ** Идентификатор - Строка - Внутреннее имя команды.
//               Для внешних печатных форм (когда Вид = "ПечатнаяФорма"):
//                 Идентификатор может содержать имена одной или нескольких команд печати,
//                 разделенных запятыми. Подробнее см. описание колонки Идентификатор
//                 в функции СоздатьКоллекциюКомандПечати() общего модуля УправлениеПечатью.
//           
//           ** Представление - Строка - Пользовательское представление команды.
//           
//           ** Использование - Строка - Тип команды:
//               "ВызовКлиентскогоМетода",
//               "ВызовСерверногоМетода",
//               "ЗаполнениеФормы",
//               "ОткрытиеФормы" или
//               "СценарийВБезопасномРежиме".
//               Для получения типов команд рекомендуется использовать функции
//               ДополнительныеОтчетыИОбработкиКлиентСервер.ТипКоманды<ИмяТипа>().
//               В комментариям к этим функциям также даны шаблоны процедур-обработчиков команд.
//           
//           ** ПоказыватьОповещение - Булево - если Истина, то при запуске команды выводится оповещение "Команда выполняется...".
//              Действует для всех типов команд, кроме команд по открытию формы (Использование = "ОткрытиеФормы").
//           
//           ** Модификатор - Строка - Дополнительная классификация команды.
//               Для внешних печатных форм (когда Вид = "ПечатнаяФорма"):
//                 *** "ПечатьMXL" - для печатных форм на основе табличных макетов.
//               Для загрузки данных из файла (когда Вид = "ПечатнаяФорма" и Использование = "ЗагрузкаДанныхИзФайла"):
//                 Модификатор является обязательным для заполнения
//                 и должен содержать полное имя объекта метаданных (справочника),
//                 для которого выполняется загрузка данных.
//           
//           ** Скрыть - Булево - Необязательный. Признак того, что это служебная команда.
//               Если установить в значение Истина, то команда скрывается в карточке дополнительного объекта.
//
Функция ШаблонСведенияОВнешнейОбработке(ВерсияБСП = "") Экспорт
	ПараметрыРегистрации = Новый Структура;
	
	ПараметрыРегистрации.Вставить("Вид", "");
	ПараметрыРегистрации.Вставить("Версия", "0.0");
	ПараметрыРегистрации.Вставить("Назначение", Новый Массив);
	ПараметрыРегистрации.Вставить("Наименование", Неопределено);
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Истина);
	ПараметрыРегистрации.Вставить("Информация", Неопределено);
	ПараметрыРегистрации.Вставить("ВерсияБСП", ВерсияБСП);
	ПараметрыРегистрации.Вставить("ОпределитьНастройкиФормы", Ложь);
	
	РеквизитыТабличнойЧасти = Метаданные.Справочники.ДополнительныеОтчетыИОбработки.ТабличныеЧасти.Команды.Реквизиты;
	
	ТаблицаКоманд = Новый ТаблицаЗначений;
	ТаблицаКоманд.Колонки.Добавить("Представление", РеквизитыТабличнойЧасти.Представление.Тип);
	ТаблицаКоманд.Колонки.Добавить("Идентификатор", РеквизитыТабличнойЧасти.Идентификатор.Тип);
	ТаблицаКоманд.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	ТаблицаКоманд.Колонки.Добавить("ПоказыватьОповещение", РеквизитыТабличнойЧасти.ПоказыватьОповещение.Тип);
	ТаблицаКоманд.Колонки.Добавить("Модификатор", РеквизитыТабличнойЧасти.Модификатор.Тип);
	ТаблицаКоманд.Колонки.Добавить("Скрыть",      РеквизитыТабличнойЧасти.Скрыть.Тип);
	//ТаблицаКоманд.Колонки.Добавить("ЗаменяемыеКоманды", РеквизитыТабличнойЧасти.ЗаменяемыеКоманды.Тип);
	
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	ПараметрыРегистрации.Вставить("Разрешения", Новый Массив);
	
	Возврат ПараметрыРегистрации;
КонецФункции


Версия = "2.1";
Наименование = НСтр("ru = 'Регламентные и фоновые задания'");
